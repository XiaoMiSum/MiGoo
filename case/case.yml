name: the-test-suite-name
config:
  variables:
    user2: test
  beforeClass:
    - __hook1(A=beforeClass)
  afterClass:
    - __hook1(A=afterClass)
  request:
    url: http://migoo.xyz/api/login
    method: post
cases:
  - title: 执行成功
    request:
      headers:
        a: a
        b: b
    config:
      variables:
        pwd1: __generatePassword(password=${pwd})
        pwd2: __generatePassword(password=${pwd1})
      before:
        - __hook1(A=before)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user}
      password: ${pwd2}
      sign: __Digest(string=${user}${pwd})
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 200, func: eq}
      - {check: body.data, expect: null, func: isNotEmpty}
  - title: 忽略执行
    config:
      ignore: true
      variables:
        pwd: __generatePassword($user)
      before:
        - __hook1(A=before)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user2}
      password: 12345
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 411, func: eq}
      - {check: body.data, expect: null, func: isEmpty}
  - title: 密码错误
    config:
      variables:
        pwd1: __generatePassword(password=${user})
      before:
        - __hook1(A=before)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user}
      password: ${pwd1}
      sign: __Digest(string=${user}${pwd1})
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 411, func: eq}
      - {check: body.data, expect: username or password error, func: ==}
  - title: 验证失败
    config:
      variables:
        pwd1: __generatePassword(password=${pwd})
        pwd2: __generatePassword(password=${pwd1})
      before:
        - __hook1(A=before)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user}
      password: 12345
      sign: __Digest(string=${user})
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 411, func: eq}
      - {check: body.data, expect: null, func: isEmpty}
  - title: case中的after执行失败不影响用例结果
    config:
      variables:
        pwd1: __generatePassword(password=${pwd})
        pwd2: __generatePassword(password=${pwd1})
      before:
        - __hook1(A=before)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user}
      password: ${pwd2}
      sign: __Digest(algorithm=md5,string=${user}${pwd})
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 200, func: eq}
      - {check: body.data, expect: null, func: isNotEmpty}
      - {check: xyz.migoo.test.example.TestAssertion, expect: 1}
  - title: case中的before执行失败影响用例结果
    config:
      variables:
        pwd1: __generatePassword(password=${pwd})
        pwd2: __generatePassword(password=${pwd1})
      before:
        - __hook1(A=before,B=hshs)
      after:
        - __hook2(A=after,B=before)
    body:
      userName: ${user}
      password: ${pwd2}
      sign: __Digest(string=${user}${pwd})
    validates:
      - {check: status, expect: 200, func: ==}
      - {check: $.status, expect: 200, func: eq}
      - {check: body.data, expect: null, func: isNotEmpty}
