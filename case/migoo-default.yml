name: migoo接口测试框架
config: # 配置信息
  request:
    protocol: http # 可缺省，默认http协议
    host: migoo.xyz # 可缺省，默认 127.0.0.1
    port: 80 #可缺省，http协议默认80，https默认443
    method: post # 可缺省，默认 GET
    headers:
      X-Header: migoo
  report: # 可缺省，配置测试报告
    listener: # 可缺省，测试报告实现类
    output: # 可缺省，测试报告保存地址
#  email: # 邮件相关信息，测试完毕后邮件发送测试报告 可缺省
#    host: # 邮件发送服务器 请使用SMTP服务 如： smtp.163.com
#    port: # 邮件发送服务器端口 如：25
#    user: # 发件人邮箱地址 如：xxx_yyy@163.com
#    password: # 发件人邮箱密码
#    tolist: # 收件人列表
#      - mi_xiao@qq.com # 收件人列表1
dataset: # 可空，正对当前 suite 生效
  setup: # 可空，在完成 suite 中的 vars绑定后执行
    - '__method(str=演示从用例传参调用扩展1)'
  teardown: # 可空，在 suite 中的所有用例执行完成后执行
    - '__method(str=演示从用例传参调用扩展2)'
  vars: # 可空，自定义变量，完成 suite解析后，优先进行vars绑定
    sign: '__digest(string=migoo123456qq)'
sets:
  - name: xx接口测试用例集
    config:
      request:
        headers:
          X-Token: token
        api: /api/test # 可缺省
    dataset: # 可空，针对当前 caseset 生效
      setup: # 可空，在完成当前 caseset 中的 vars绑定后执行
        - '__method(str=演示从用例传参调用扩展3)'
      teardown: # 可空，在当前 caseset 中的所有用例执行完成后执行
        - '__method(str=演示从用例传参调用扩展4)'
      vars: # 可空，自定义变量，执行当前caseset中的用例时，优先进行vars绑定
        user: migoo
    cases:
      - title: 测试用例1
        config:
          request:
            headers:
              X-Title: title
            api: /api/login # 可缺省
        dataset: # 可空，针对当前 case 生效
          setup: # 可空，在完成当前 case 中的 vars绑定后执行
            - '__method(str=演示从用例传参调用扩展5)'
          teardown: # 可空，在当前 case 中的所有用例执行完成后执行
            - '__method(str=演示从用例传参调用扩展6)'
          vars: # 可空，自定义变量，执行当前 case时，优先进行vars绑定
            password: 123456qq
        body: # 请求参数，可空，url参数使用 query，form-urlencode使用 data，json使用body
          userName: ${user}
          password: ${password}
          sign: ${sign}
        validators: # 检查点， 当 assertion 为JSON 时可空
          - {assertion: response, field: status, expected: 200, rule: ==}
          - {assertion: json, field: $.status, expected: 200, rule: ==}
          - {field: $.data.token, expected: '\w+\.\w+\.\w+', rule: regex}
      - title: 测试用例2
        config:
          request:
            api: /api/login # 可缺省
        dataset: # 可空，针对当前 case 生效
          setup: # 可空，在完成当前 case 中的 vars绑定后执行
            - '__method(str=演示从用例传参调用扩展5)'
          teardown: # 可空，在当前 case 中的所有用例执行完成后执行
            - '__method(str=演示从用例传参调用扩展6)'
          vars: # 可空，自定义变量，执行当前 case时，优先进行vars绑定
            password: 123456qq
        query:
          test1: test1
          test2: test2
          test3: test3
        body: # 请求参数，可空，url参数使用 query，form-urlencode使用 data，json使用body
          userName: ${user}
          password: ${password}
          sign: ${sign}
        validators: # 检查点， 当 assertion 为JSON 时可空
          - {assertion: response, field: status, expected: 200, rule: ==}
          - {assertion: json, field: $.status, expected: 200, rule: ==}
          - {field: $.data.token, expected: '\w+\.\w+\.\w+', rule: regex}
